{
  "openapi": "3.0.3",
  "info": {
    "description": "This is a simple API",
    "version": "1.0.0",
    "title": "Simple food api"
  },
  "paths": {
    "/foodservice/foods": {
      "get": {
        "tags": [
          "food-controller"
        ],
        "operationId": "listAllFoods",
        "summary": "List all foods",
        "description": "Show list of all foods available in foodservice",
        "responses": {
          "200": {
            "description": "A list of foods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/foodModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orderservice/orders": {
      "get": {
        "tags": [
          "order-controller"
        ],
        "operationId": "getCustomerOrders",
        "summary": "List orders of authenticated customer",
        "description": "Show list of all orders in customer",
        "responses": {
          "200": {
            "description": "A list of authenticated customer's orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/orderModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order-controller"
        ],
        "operationId": "createOrder",
        "summary": "Create order from the cart of body",
        "description": "Create order",
        "requestBody": {
          "description": "Send new cart",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cartModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderModel"
                }
              }
            }
          },
          "400": {
            "description": "The cart is empty"
          },
          "405": {
            "description": "Balance of authenticated customer is not enough"
          }
        }
      }
    },
    "/orderservice/orders/{orderId}": {
      "get": {
        "tags": [
          "order-controller"
        ],
        "operationId": "getOrderById",
        "summary": "Get order of authenticated customer by orderId",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order by orderId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderModel"
                }
              }
            }
          },
          "403": {
            "description": "the order exists but does not belong to the authenticated customer"
          },
          "404": {
            "description": "the order does not exist"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "foodModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "example": "Gazpacho"
          },
          "calorie": {
            "type": "integer",
            "format": "int64",
            "example": 162.00
          },
          "description": {
            "type": "string",
            "example": "Gazpacho"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "example": 8.00
          },
          "category": {
            "type": "string",
            "enum": [
              "GRAINS",
              "FRUIT",
              "VEGETABLE",
              "DAIRY",
              "MEAT",
              "SNACK",
              "MEAL"
            ]
          }
        }
      },
      "orderModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 41
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "example": 16.00
          },
          "timestampCreated": {
            "type": "string",
            "format": "date-time",
            "example": "02-06-2022 14:33:26"
          },
          "orderItemModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderItemModel"
            }
          }
        }
      },
      "orderItemModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 104
          },
          "foodModel": {
            "$ref": "#/components/schemas/foodModel"
          },
          "pieces": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "example": 16.00
          }
        }
      },
      "cartModel": {
        "type": "object",
        "properties": {
          "price": {
            "type": "integer",
            "format": "int64",
            "example": 16.00
          },
          "orderItemModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderItemModel"
            }
          }
        }
      }
    }
  },
  "security": [
  ],
  "tags": [
    {
      "name": "food-controller",
      "description": "The foodservice API"
    },
    {
      "name": "order-controller",
      "description": "The orderservice API"
    }
  ]
}