---
openapi: 3.0.3
info:
  description: This is a simple API
  version: 1.0.0
  title: Simple food api
paths:
  "/foodservice/foods":
    get:
      summary: List all foods
      operationId: listAllFoods
      responses:
        '200':
          description: List of foods
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FoodModel"
  "/orderservice/orders/{orderId}":
    get:
      summary: Get order by id
      parameters:
        - in: path
          name: orderId
          required: true
          description: The ID of the order to return.
          schema:
            type: integer
            format: int64
      operationId: getOrderById
      responses:
        '200':
          description: An order object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderModel"
        '403':
          description: The order exists but does not belong to the authenticated customer
        '404':
          description: The order does not exist
  "/orderservice/orders":
      get:
        summary: List of authenticated customer's orders
        operationId: getCustomerOrders
        responses:
          200:
            description: Customer orders
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/OrderModel"
      post:
        summary: The created order from the cart
        operationId: createOrder
        requestBody:
          description: CartModel
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartModel"
        responses:
          200:
            description: Created order from the cart
            content:
              application/json:
                schema:
                  type: object
                  $ref: "#/components/schemas/OrderModel"
          400:
            description: The cart is empty
          401:
            description: The balance of the customer is not enough
components:
  schemas:
    FoodModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        calorie:
          format: BigDecimal
          type: number
        description:
          type: string
        price:
          type: number
          format: BigDecimal
        category:
          type: string
          enum: [GRAINS,FRUIT,VEGETABLE,DAIRY,MEAT,SNACK,MEAL]
    OrderModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 4
        price:
          type: number
          format: BigDecimal
        timestampCreated:
          type: string
          format: date-time
          example: 02-06-2022 14:36:26
        orderItemModels:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemModel'
    OrderItemModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 4
        foodModel:
          type: object
          $ref: '#/components/schemas/FoodModel'
        pieces:
          type: integer
        price:
          type: number
          format: BigDecimal
    CartModel:
      type: object
      properties:
        price:
          type: number
          format: BigDecimal
        orderItemModels:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemModel'
